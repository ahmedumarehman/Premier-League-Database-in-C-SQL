<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>